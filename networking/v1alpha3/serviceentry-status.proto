// Copyright 2019 Istio Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

import "analysis/v1alpha1/message.proto";

import "meta/v1alpha1/status.proto";

// IMPORTANT!!
// IstioServiceEntryStatus IS LARGELY A COPY OF IstioStatus AND SHOULD BE KEPT IN SYNC
// IMPORTANT!!

// $title: ServiceEntry Status
// $description: Status field for Istio ServiceEntry.
// $location: https://istio.io/docs/reference/config/networking/serviceentry-status.html

package istio.networking.v1alpha3;

option go_package="istio.io/api/networking/v1alpha3";

message ServiceEntryStatus {
  // Current service state of ServiceEntry.
  // More info: https://istio.io/docs/reference/config/config-status/
  // +optional
  // +patchMergeKey=type
  // +patchStrategy=merge
  repeated meta.v1alpha1.IstioCondition conditions = 1;

  // Includes any errors or warnings detected by Istio's analyzers.
  // +optional
  // +patchMergeKey=type
  // +patchStrategy=merge
  repeated analysis.v1alpha1.AnalysisMessageBase validation_messages = 2;

  // Resource Generation to which the Reconciled Condition refers.
  // When this value is not equal to the object's metadata generation, reconciled condition  calculation for the current
  // generation is still in progress.  See https://istio.io/latest/docs/reference/config/config-status/ for more info.
  // +optional
  int64 observed_generation = 3;

  // Above this is just a copy of the common IstioStatus since proto cannot embed an anonymous message whole cloth

  // List of addresses which were assigned to this ServiceEntry.
  // +optional
  repeated ServiceEntryAddress addresses = 10;
}

// minor abstraction to allow for adding hostnames if relevant
message ServiceEntryAddress{
  // Value is the address (192.168.0.2)
  string value = 1;
}

